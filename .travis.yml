language: node_js

os:
  - linux
  - osx
  - windows

node_js:
- '8'
- '9'
- '10'

services:
  - docker

cache:
  directories:
    - node_modules
    # - $HOME/docker

before_cache:
  # Save tagged docker images
  # - >
  #   if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
  #     mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}' 
  #     | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
  #   fi

before_install:
  # Load cached docker images
  # - if [[ "$TRAVIS_OS_NAME" == "linux" && -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  - > 
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      docker pull aliyunfc/runtime-python2.7:build-1.2.0
      docker pull aliyunfc/runtime-python3.6:build-1.2.0
      docker pull bitnami/minideb:jessie
    fi
  # install make for windows
  - > 
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then 
      choco install make
    fi

script: 
  - |
    if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
      mocha ./test/ -t 20000  -R spec --recursive -name *.test.js --grep ^Integration::
    else
      make test
    fi

deploy:
  provider: npm
  email: duwan@live.com
  api_key:
    secure: UJ7hrwXNo/nEDdvtEfwuX7s1lR0vW1Nd9tq4AmeIxG3KtKBAyglfvh/lPKN5eiO4M9Xga2mLNumNgzk6htZc6zUmKBS/uyDP/BfZFZJDkjfUdDl6l5JtLfSXaWBUSHGM2HoqMXoMrQ0RweT565G4hNDSZ/9vt6DjzCp+twOsKeQWqptcTQxgVk19ynz1Ve0dll/ViIxM04R5vWD9ISI6mHjK1lhcrzsw/HMDimzbOoAtyDSWTwconnv23tY5xCgaTSc4Ltvvlq6pQ9Mtt0mHTkFj+q3B16GeqTiHPjk1MVnPBii9Y/MgdeLkz5RDLggTD5/UzhEtqj8O+dTght4O4uRb7pqLCxVzi5atETvSim+Phsc3y159lQmqmcU/bNXl54C1ro44eBlS1jC8gTrK+c5eBAhju2AOBuoMfmNWHc+sXJLxwaW/o+3alsPeTvpYBlJnU2/LpEpWGohjEUAItyMHtp5nhBXCSf3iQAEXN02fRzj8L+fydTPRFzFnNlGB/qZNGxVIjR9JIaUL8a/DjE5Sjt6OXnNofP7CGMZxSStHVyobo0D36gW/4hRR9kymunvdOoKLmk+E1/0A6vutjOf3ajIdDvr9cfEgHFp9X3cl38WHBwNiQOlJxlE+AooMHgtCiO3+ZFcTsae/EJS3p4KOh+Fx+uBEg3aXT6gqa3Y=
  on:
    tags: true
    repo: aliyun/fun
    condition: $TRAVIS_TAG = "v$PKG_VERSION"
  before_deploy:
    - export PKG_VERSION=`node -p "require('./package').version"`